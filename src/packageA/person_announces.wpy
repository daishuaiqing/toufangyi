<style lang="less">

  #bottom-loader-wrapper {
    align-self: center;
    padding: 10px;
  }

  #operation_wrapper {
    display: flex;
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    margin: 8px 12px 0px 12px;
  }

  #clear_button {
    display: flex;
    background-color: #f2f2f2;
    color: #333;
    height: 36px;
    text-align: center;
    align-items: center;
    margin-right: 8px;
    padding-left: 16px;
    padding-right: 16px;
    border-radius: 2px;
    justify-content: center;
  }

  #clear_button:active {
    opacity: 0.7;
  }

  #confirm_button {
    display: flex;
    text-align: center;
    align-items: center;
    justify-content: center;
    color: white;
    border-radius: 2px;
    height: 36px;
    flex: 1;
    background-color: #0872b0;
  }

  #confirm_button:active {
    opacity: 0.7;
  }

  #contact_service_button {
    color: #333;
    text-decoration: underline;
  }
  .nocontenttip{
    font-size: 12px;
    background: white;
  }

</style>
<template>
    <view class="container" style="min-height: 100vh;">
      <view style="display: flex; flex-direction: column; flex: 1; ">
        <repeat for="{{ myAllAnnounce }}" item="item" index="index" key="index">
          <view @tap="clickItem">
            <ExpressAreaItem :item_data="item"/>
          </view>
        </repeat>
      </view>
      <button class="nocontenttip">{{msg}}</button>
    </view>
</template>
<script>
  import wepy from 'wepy'
  import { getRequest } from "../utils/request"
  import ExpressAreaItem from '../components/express_area/express_item'
  import BounceLoadingView from '../components/bounce_loading_view'
  export default class PersonAnnouncePage extends wepy.page {
    config = {
      navigationBarTitleText: '用户通告列表',
      onReachBottomDistance: 100
    }
    components = {
      ExpressAreaItem,
      bounce_loading: BounceLoadingView,
    }

    data = {
      msg: '',
      myAllAnnounce: [],
      announce_data: [],
      isLoadingMore: false,
      hasMore: true,
      isRefreshing: false, // 可以是筛选完毕之后自动触发的一次 Loading. 和Loading more 有区别
      current_page_index: 0,
      selectAllFlag: true,
      isMine: false
    }
    methods = {
      // 去详情页面
      clickItem(ev) {
        const { announceIndex } = ev.currentTarget.dataset
        let item = this.announce_data[announceIndex]
        if (item) {
          if (!this.isMine) {
            wepy.navigateTo({
              url: '../pages/express_detail?data=' + JSON.stringify(item)
            })
          } else {
            if (item.checked) {
              item.checked = 0
            } else {
              item.checked = 1
            }
          }
        }
      }
    }
    // 获取我的所有通告列表
    getmyAllAnnounce() {
      wx.showLoading({
        title: '正在加载',
      })
      var pageNum = 1
      var that = this
      that.pageNum = pageNum
      getRequest({ url: '/bms/financier/announce/list?pageNum=' + pageNum }).then(res => {
        console.log(res, '金主的通告列表')
        if (res.data.data) {
          var myAllAnnounce = res.data.data.content
          that.myAllAnnounce = myAllAnnounce
          wx.hideLoading()
        } else {
          console.log('当前还没有通告')
        }
      })
    }
    onReachBottom() {
      console.log('触底加载下一页')
      var that = this
      that.pageNum = that.pageNum + 1
      getRequest({ url: '/bms/financier/announce/list?pageNum=' + this.pageNum }).then(res => {
        var nextPageContent = res.data.data.content
        if (nextPageContent.length) {
          that.myAllAnnounce = [...that.myAllAnnounce, ...nextPageContent]
          console.log(that.myAllAnnounce)
          wepy.startPullDownRefresh({ success: res => {} })
        } else {
          wx.hideLoading()
          that.msg = '没有更多内容了'
        }
      })
    }
    onPullDownRefresh(e) {
      this.getmyAllAnnounce()
    }
    onShow(option) {
      this.selectAllFlag = true
    }
    onLoad(option) {
      this.getmyAllAnnounce()
    }
  }
</script>
