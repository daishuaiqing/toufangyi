<style lang="less">
.container{
  padding-bottom: 25px;
  box-sizing: border-box;
}
.conditiontop{
  position: fixed;
  top:0;
  background: white;
  width: 100vw;
  border-top: 1px solid #dedede;

}
// 顶部筛选
#top-filter-bar{
  width: 100%;
  display: flex;
  font-size: 14px;
  padding:10px 15px;
  justify-content: space-around;
  border-bottom: 1px solid rgba(216, 209, 209, 0.596);
}
.announce_list{
  padding-bottom:30px;
  margin-top: 50px;
}
.kolList{
  padding-bottom: 30px;
  margin-top: 50px;
}
.button_add{
  width: 60px;
  height: 60px;
  border-radius: 50px;
  position:fixed;
  right: 20px;
  bottom:80px;
  background: rgb(140, 182, 140);
  color:white;
  display: flex;
  align-items: center;
  justify-content: center;
}
</style>
<template>
<view>
  <!-- 首页红人列表 -->
  <view class="container" wx:if="{{!verify}}">
    <view class="conditiontop">
      <view id="top-filter-bar">
         <picker name="appName" class="filter_button" @change="clickFilterByPlatform" value="{{platformIndex}}" range="{{platform_data}}">
             <text >{{platformIndex==-1?'平台':platform_data[platformIndex]}} ▾</text>
        </picker>
       <picker  class="filter_button" @change="clickFilterByFansNum"  range="{{fansArray}}">
          <text>{{fansNumIndex==-1?'粉丝':fansDisplay }} ▾</text>
        </picker>
      </view>
    </view>
      
      <view class="button_add" @tap="addannounce">发布</view>
      <view class="kolList">
        <repeat for="{{allKolList}}" item="item" index="index" key="index">
          <view @tap="clickItem" id = "{{item.umsCelebrityCard.id}}">
            <ApplyItem :item_data.sync="item"/>
          </view>
      </repeat>
      <view id="bottom-loader-wrapper" style="padding:10px 0;font-size:12px;text-align:center;">
          <block hidden="{{hasMore}}">
            <text class="bottom_loader_wrapper_text">{{msg}}</text>
          </block>
        </view>
      </view>      
      <mp-tabbar current="{{current}}" style="position:fixed;bottom:0;width:100%;left:0;right:0;" list="{{otherlist}}" bindchange="tabChange"></mp-tabbar>
    </view>
  <!-- 首页通告列表-->
  <block wx:if="{{verify}}">
    <view class="container">
      <view class="conditiontop">
      <view id="top-filter-bar">
         <picker name="appName" class="filter_button" @change="clickFilterByPlatform" value="{{platformIndex}}" range="{{platform_data}}">
             <text >{{platformIndex==-1?'平台':platform_data[platformIndex]}} ▾</text>
        </picker>
       <picker  class="filter_button" @change="clickFilterByFansNum"  range="{{fansArray}}">
          <text>{{fansNumIndex==-1?'粉丝':fansDisplay }} ▾</text>
        </picker>
      </view>
    </view>
      <view class="announce_list">
        <repeat for="{{announce_data}}" item="item" index="index" key="index">
          <view @tap="clickItem" id="{{item.bmsAnnounce.id}}">
            <ExpressAreaItem :item_data.sync="item"/>
          </view>
        </repeat>
        <view id="bottom-loader-wrapper" style="padding:10px 0;font-size:12px;text-align:center;">
          <block hidden="{{hasMore}}">
            <text class="bottom_loader_wrapper_text">{{msg}}</text>
          </block>
        </view>
      </view>
      <mp-tabbar current="{{0}}" style="position:fixed;bottom:0;width:100%;left:0;right:0;" list="{{list}}" bindchange="tabChange"></mp-tabbar>
    </view>
  </block>
</view>
</template>
<script>
  import wepy from 'wepy'
  import { FILTER_CONDITION } from '../data/filter'
  import { tabbarlist } from '../data/tabbarList'
  import ExpressAreaItem from '../components/express_area/express_item'
  import ApplyItem from '../components/express_area/apply_item'
  import BounceLoadingView from '../components/bounce_loading_view'
  import { getRequest } from "../utils/request"
  export default class ExpressAreaPage extends wepy.page {
    config = {
      navigationBarTitleText: '通告列表',
      enablePullDownRefresh: true,
      onReachBottomDistance: 80,
      "usingComponents": {
        "mp-tabbar": '../../custom-tab-bar/tabbar/tabbar'
      }
    }
    components = {
      ExpressAreaItem,
      bounce_loading: BounceLoadingView,
      ApplyItem
    }
    data = {
      msg: '',
      hasMore: false,
      pageNum: 1,
      list: tabbarlist.list,
      otherlist: tabbarlist.otherlist,
      verify: false,
      announce_data: [],
      allKolList: [],
      platform_data: FILTER_CONDITION.platform_data,
      fans_data: FILTER_CONDITION.fans_data, // 粉丝数量
      platformIndex: -1, // 平台index
      fansNumIndex: -1, // 粉丝数量index
      fansLevel: 0,
      fansStr: null,
      fansDisplay: '',
      fansArray: [],
      selectPlatform: null,
      condition: false // 是否筛选
    }
    methods = {
      addannounce() {
        wepy.navigateTo({
          url: '../pages/add_platform'
        })
      },
      clickItem(e) {
        // 通告详情界面
        if (this.verify === true) {
          var announceid = e.currentTarget.id
          wepy.navigateTo({
            url: '../packageA/express_detail?announceId=' + announceid
          })
        } else {
          // 去红人主页
          var kolId = e.currentTarget.id
          wepy.navigateTo({
            url: '../packageA/kol_detail?kolId=' + kolId
          })
        }
      }
    }
    // 平台类型筛选
    clickFilterByPlatform(e) {
      var index = e.detail.value
      this.platformIndex = index
      this.selectPlatform = this.platform_data[index]
      console.log(this.selectPlatform, '999999999999999')
      if (this.verify === true) {
        this.conditionList(this.selectPlatform, this.fansStr, this.fansLevel)
      } else {
        this.conditionKOL(this.selectPlatform, this.fansStr, this.fansLevel)
      }
      this.condition = true
    }
    // 粉丝数量筛选
    clickFilterByFansNum(e) {
      this.fansNumIndex = e.detail.value
      this.fansDisplay = this.fans_data[this.fansNumIndex].displayText
      var fansStr = this.fansDisplay.replace(/\s*/g, '')
      this.fansStr = fansStr
      console.log(fansStr)
      var fansLevel = this.fans_data[this.fansNumIndex].level
      fansLevel = fansLevel.split('L')[1]
      this.fansLevel = fansLevel
      console.log(this.fansLevel, '88888888888')
      if (this.verify === true) {
        this.conditionList(this.selectPlatform, this.fansStr, this.fansLevel)
      } else {
        this.conditionKOL(this.selectPlatform, this.fansStr, this.fansLevel)
      }
      this.condition = true
    }
    // 下拉刷新
    onPullDownRefresh(e) {
      var that = this
      that.pageNum = 1
      if (this.verify === true) {
        this.getannounceList(that.pageNum)
        wepy.stopPullDownRefresh()
      } else {
        this.getKolList(that.pageNum)
        wepy.stopPullDownRefresh()
      }
      this.fansNumIndex = -1
      this.platformIndex = -1
    }
    // 筛选通告
    async conditionList(appName, fansStr, fansLevel) {
      var that = this
      var data = {
        "appName": appName,
        "fansStr": fansStr,
        "fansLevel": fansLevel
      }
      await getRequest({ url: '/bms/announce/list' }, data).then(res => {
        console.log(res, '筛选通告列表')
        if (res.data.code === 200) {
          that.announce_data = res.data.data.content
          console.log(that.announce_data, '通告列表')
          wepy.hideLoading()
        } else {
          wepy.hideLoading()
          console.log('系统异常')
        }
      })
      that.$apply()
    }
    // 筛选红人列表
    async conditionKOL(appName, fansStr, fansLevel) {
      var that = this
      var data = {
        "appName": appName,
        "fansStr": fansStr,
        "fansLevel": fansLevel
      }
      await getRequest({ url: '/ums/celebrity/list' }, data).then(res => {
        console.log(res, '77777777777777777777')
        var code = res.data.code
        if (code === 200) {
          var allKolList = res.data.data.content
          this.allKolList = allKolList
          this.hasMore = false
        }
      })
      that.$apply()
    }
    // 触底加载
    async onReachBottom(e) {
      console.log('加载下一页')
      var that = this
      that.pageNum = that.pageNum + 1
      if (this.verify === true) {
        this.getannounceList(that.pageNum)
        // if (this.condition === true) {

        // }
      } else {
        that.getKolList(that.pageNum)
      }
    }
    // 获取通告列表
    async getannounceList(pageNum) {
      var that = this
      wepy.showLoading()
      await getRequest({ url: '/bms/announce/list?pageNum=' + pageNum }).then(res => {
        console.log(res, '00000000')
        if (res.data.code === 200) {
          wepy.hideLoading()
          if (res.data.data.content.length) {
            var data = res.data.data.content
            that.announce_data = [...that.announce_data, ...data]
            console.log(that.announce_data, '通告列表')
            that.$apply()
          } else {
            // that.msg = "没有数据"
            console.log('没有数据了')
            that.$apply()
          }
        } else {
          wepy.hideLoading()
          wepy.showToast({
            title: '系统异常',
            icon: 'none',
          })
        }
      })
    }
    // 获取红人列表
    async getKolList(pageNum) {
      var that = this
      wepy.showLoading({})
      await getRequest({ url: '/ums/celebrity/card/list?pageNum=' + pageNum }).then(res => {
        console.log(res)
        var code = res.data.code
        if (code === 200) {
          wepy.hideLoading()
          var data = res.data.data.content
          if (data.length) {
            data = res.data.data.content
            that.allKolList = [...that.allKolList, ...data]
            console.log(that.allKolList, '所有红人')
            that.$apply()
          } else {
            console.log('没有数据了')
            that.$apply()
          }
        } else {
          wx.hideLoading()
          wepy.showToast({
            title: '系统异常',
            icon: 'none',
          })
        }
        // that.$apply()
      })
    }
    async onLoad(option) {
      var fans_data = []
      this.fans_data.forEach(v => {
        fans_data.push(v.displayText)
      })
      this.fansArray = fans_data
    }
    onShow() {
      this.pageNum = 1
      var that = this
      wepy.hideTabBar({animation: false})
      var verify = wx.getStorageSync('verify')
      if (verify === 1) {
        console.log(verify, '这是红人身份')
        this.getannounceList(that.pageNum)
        this.verify = true
      } else if (verify === 2) {
        console.log(verify, '这是金主身份')
        this.verify = false
        this.getKolList(that.pageNum)
      } else {
        console.log('当前是首次登录，还没有选择身份')
        wepy.redirectTo({ url: '/packageB/choose_identify' })
      }
    }
    onReady() {
    }
  }
</script>
