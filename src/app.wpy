
<style lang="less" src='./assets/iconfont.scss'>
</style>
<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { setStore } from 'wepy-redux'
import configStore from './store'
import CONST from './data/appconst'
let baseURL = CONST.HTTP_BASE_URL
import { postRequest, getRequest } from "./utils/request"
const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/express_area',
      'pages/add_platform',
      'pages/kol_mine',
      'pages/message',
    ],
    "subPackages": [{
      root: "packageA",
      pages: [
        'person_announces',
        'kol_detail',
        'express_detail',
        'addmyInfo',
        'authorize',
        'getphone',
        'nologin'
      ]
    }, {
      root: "packageB",
      pages: [
        'choose_identify',
        'bind_phone',
        'edit_myplatform',
        'myaddress',
        'addaddress',
        'addpicture',
        'jinzhupage',
        'change_identify',
        'inputInfo'
      ]
    }],
    "tabBar": {
      // custom: true,
      color: '#333',
      selectedColor: '#1296db',
      backgroundColor: '#f2f2f2',
      borderStyle: 'white',
      position: 'bottom',
      list: [
        {
          selectedIconPath: 'images/tong1.png',
          iconPath: 'images/tong.png',
          pagePath: 'pages/express_area',
          text: '红人'
        },
        {
          selectedIconPath: 'images/mes1.png',
          iconPath: 'images/mes.png',
          pagePath: 'pages/message',
          text: '消息'
        },
        {
          selectedIconPath: 'images/myi.png',
          iconPath: 'images/my.png',
          pagePath: 'pages/kol_mine',
          text: '我的'
        }
      ]
    },
    usingComponents: {
      "mp-tabbar": './custom-tab-bar/tabbar/tabbar',
      // "cu-custom": './colorui/components/cu-custom'
    },
    window: {
      backgroundColor: '#eeeeee',
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: 'white',
      navigationBarTitleText: '投放达人',
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: true
    },
    permission: {
      'scope.userLocation': {
        desc: '你的位置信息将用于小程序位置接口的效果展示'
      }
    },
    networkTimeout: {
      request: 3000
    }
  }
  globalData = {
    userInfo: null,
    verify: null,
    wxinfo: null,
    scopeu: false,
    baseURL: baseURL,
    scopeuInfo: ''
  }
  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify')
  }
  onShow(options) {
    this.checkUserInfo()
    var verify = wepy.getStorageSync('verify')
    console.log('当前verify为：', verify, '1为红人，2是金主')
    this.globalData.verify = verify
  }
  onLaunch(options) {
    let logs = wx.getStorageSync('logs') || []
    logs.unshift(Date.now())
    wx.setStorageSync('logs', logs)
  }
  checkUserInfo() {
    var that = this
    wx.getSetting({ success: res => {
      if (res.authSetting['scope.userInfo']) {
        that.globalData.scopeu = true
        console.log(that.globalData.scopeu, '授权状态')
        wx.getUserInfo({
          success(res) {
            that.globalData.wxinfo = res.userInfo
            that.globalData.scopeuInfo = res
            that.wxcheckSession()
            wx.setStorageSync('userInfo', that.globalData.wxinfo)
          }
        })
      } else {
        that.globalData.scopeu = false
        console.log(that.globalData.scopeu, '登录状态，未授权')
        wx.removeStorageSync('userInfo')
      }
    }
    })
  }
  wxcheckSession() {
    var that = this
    wx.checkSession({
      success(res) {
        wx.getStorage({
          key: 'userInfo',
          success(res) {
            console.log(res, '获取的用户缓存信息')
            if (res.data) {
              that.globalData.wxinfo = res.data
            } else {
              wx.removeStorageSync('userInfo')
              that.login()
            }
          }
        })
      },
      fail(err) {
        var that = this
        console.log(err, '过期session')
        that.globalData.wxinfo = null
        wx.removeStorageSync('userInfo')
        that.login()
      }
    })
    wx.getStorage({
      key: 'token',
      success(res) {
        getRequest({url: '/ums/user/check/token'}).then(res => {
          if (res.data.code === 200) {
            console.log('token有效')
          } else {
            console.log('token无效')
            wx.removeStorageSync('token')
          }
        })
        // session_key 未过期，并且在本生命周期一直有效
        that.globalData.token = res.token
      },
      fail() {
        that.login()
      }
    })
  }
  login() {
    var that = this
    wx.login({
      success(res) {
        console.log(res, 'login')
        if (res.code) {
          var code = res.code
          var encryptedData = that.globalData.scopeuInfo.encryptedData
          var iv = that.globalData.scopeuInfo.iv
          var phoneNumb = ""
          var rawData = that.globalData.scopeuInfo.rawData
          var signature = that.globalData.scopeuInfo.signature
          var data = {
            code: code,
            encryptedData: encryptedData,
            iv: iv,
            phoneNumb: phoneNumb,
            rawData: rawData,
            signature: signature,
            wxNumb: ""
          }
          postRequest({url: '/ums/user/login'}, data).then(res => {
            if (res.data.data) {
              wx.setStorageSync('token', res.data.data.token)
            } else {
              console.log("用户信息校验失败")
            }
          })
        }
      }
    })
  }
}
</script>
